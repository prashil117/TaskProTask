{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/prashilparmar/Documents/REACT/beezerTest/testapp/src/Screens/UserList.jsx\";\nimport { Component } from 'react';\nimport data from './../data.json';\nimport { Table, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Spin, Space } from 'antd';\nimport { AddData, fetchData } from './../Redux/actions/useraction';\nimport { bindActionCreators } from 'redux';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newData: [],\n      dataload: this.props.msg === \"\" ? 'fetching' : 'fetched'\n    };\n  }\n\n  addData() {\n    var arr = [];\n\n    for (var i in Object.keys(data.users)) {\n      var key = Object.keys(data.users)[i];\n      var values = Object.values(data.users)[i];\n      arr.push({\n        key: key,\n        value: values\n      });\n    }\n\n    this.setState({\n      newData: arr\n    });\n    this.props.AddData(arr);\n  }\n\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  render() {\n    console.log(\"this.props\", this.props);\n    let userData = [];\n    let ele = null;\n    this.props.userList.map(data => {\n      const {\n        id,\n        account,\n        name\n      } = data;\n      ele = /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this);\n      return userData.push(ele);\n    });\n    console.log(\"userData\", userData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Data \", this.state.dataload, \" from Firebase Real Time Database\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), userData && userData.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"User ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: this.props.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 36\n        }, this), \"  \", this.props.msg === \"\" ? /*#__PURE__*/_jsxDEV(Spin, {\n          tip: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 88\n        }, this) : this.props.msg === \"No Data\" && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            this.addData();\n          },\n          children: \"Add Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 151\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    userList: state.user.userList,\n    msssg: state.user.msg\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    AddData,\n    fetchData\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);","map":{"version":3,"sources":["/Users/prashilparmar/Documents/REACT/beezerTest/testapp/src/Screens/UserList.jsx"],"names":["Component","data","Table","Button","connect","Spin","Space","AddData","fetchData","bindActionCreators","UserList","constructor","props","state","newData","dataload","msg","addData","arr","i","Object","keys","users","key","values","push","value","setState","componentDidMount","render","console","log","userData","ele","userList","map","id","account","name","length","mapStateToProps","user","msssg","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport data from './../data.json';\nimport { Table, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux';\nimport { Spin, Space } from 'antd';\nimport { AddData, fetchData } from './../Redux/actions/useraction'\nimport { bindActionCreators } from 'redux'\n\nclass UserList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newData: [],\n            dataload: this.props.msg===\"\" ?'fetching' :'fetched'\n        }\n    }\n\n    addData() {\n        var arr = [];\n        for (var i in Object.keys(data.users)) {\n            var key = Object.keys(data.users)[i]\n            var values = Object.values(data.users)[i]\n            arr.push({\n                key: key,\n                value: values\n            })\n        }\n        this.setState({ newData: arr })\n        this.props.AddData(arr)\n    }\n    componentDidMount() {\n        this.props.fetchData();\n    }\n    render() {\n        console.log(\"this.props\", this.props)\n        let userData = []\n        let ele = null;\n        this.props.userList.map((data) => {\n            const { id, account, name } = data;\n            ele = (<tr key={id}>\n                <td>\n                    {id}\n                </td>\n                <td>\n                    {name}\n                </td>\n                <td>\n                    {account}\n                </td>\n            </tr>)\n            return userData.push(ele);\n        })\n        console.log(\"userData\", userData)\n        return (\n            <div>\n                <div>\n                    <h1>Data {this.state.dataload} from Firebase Real Time Database</h1>\n                </div>\n                {userData && userData.length !== 0 ?\n                    <div>\n                        <Table striped bordered hover>\n\n                            <thead>\n\n                                <tr>\n                                    <th>User ID</th>\n                                    <th>Name</th>\n                                    <th>Account</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {userData}\n                            </tbody>\n                        </Table>\n                    </div> : <div> <h4>{this.props.msg}</h4>  {this.props.msg === \"\" ? <Spin tip=\"Loading...\"></Spin> : this.props.msg===\"No Data\" && <Button onClick={() => { this.addData() }}>\n                        Add Data\n                    </Button>}\n                    </div>}\n\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        user: state.user,\n        userList: state.user.userList,\n        msssg: state.user.msg\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(\n        {\n            AddData,\n            fetchData\n        },\n        dispatch\n    )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList)"]},"metadata":{},"sourceType":"module"}