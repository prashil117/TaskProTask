{"ast":null,"code":"import * as types from '../constants/actionTypes';\nimport firebase from '../constants/appconfig';\nexport function AddData(params) {\n  var userarr = params.users;\n  var Apparr = params.accounts;\n  console.log(\"params\", params);\n  return dispatch => {\n    Object.keys(userarr).forEach(function (key) {\n      firebase.database().ref('users/' + key).set({\n        name: userarr[key].name,\n        account: userarr[key].account\n      }).then(function () {\n        console.log('Data added succesfully');\n      }).catch(function (error) {\n        console.log('Synchronization failed', error);\n      });\n    });\n    Object.keys(Apparr).forEach(function (key) {\n      firebase.database().ref('accounts/' + key).set({\n        apps: Apparr[key].apps\n      }).then(function () {\n        console.log('Data added succesfully');\n      }).catch(function (error) {\n        console.log('Synchronization failed', error);\n      });\n    });\n  };\n}\n_c = AddData;\nexport function fetchData(params) {\n  return dispatch => {\n    const db = firebase.database().ref('users'); // db.on(\"value\", function (snapshot) {\n    //     let newUserState = [];\n    //     snapshot.forEach(data => {\n    //         const dataVal = data.val()\n    //         newUserState.push({\n    //             id: data.key,\n    //             name: dataVal.name,\n    //             account: dataVal.account\n    //         })\n    //     })\n    //     dispatch({ type: types.RESPONSE_FETCH_USER, data: newUserState });\n    // }, function (errorObject) {\n    //     console.log(\"The read failed: \" + errorObject.code);\n    // });\n\n    db.on('value', function (snapshot) {\n      var userId = snapshot.val().account;\n      snapshot.forEach(data => {\n        const dataVal = data.val();\n        console.log(\"dataVal\", dataVal);\n        db.child('accounts').child(dataVal.account).once('value', function (mediaSnap) {\n          console.log(userId + \":\" + mediaSnap.val());\n        });\n      });\n    });\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["/Users/prashilparmar/Documents/REACT/beezerTest/testapp/src/Redux/actions/useraction.js"],"names":["types","firebase","AddData","params","userarr","users","Apparr","accounts","console","log","dispatch","Object","keys","forEach","key","database","ref","set","name","account","then","catch","error","apps","fetchData","db","on","snapshot","userId","val","data","dataVal","child","once","mediaSnap"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAC5B,MAAIC,OAAO,GAAGD,MAAM,CAACE,KAArB;AACA,MAAIC,MAAM,GAAGH,MAAM,CAACI,QAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,MAAtB;AACA,SAAQO,QAAD,IAAc;AACjBC,IAAAA,MAAM,CAACC,IAAP,CAAYR,OAAZ,EAAqBS,OAArB,CAA6B,UAAUC,GAAV,EAAe;AACxCb,MAAAA,QAAQ,CAACc,QAAT,GAAoBC,GAApB,CAAwB,WAAWF,GAAnC,EAAwCG,GAAxC,CAA4C;AACxCC,QAAAA,IAAI,EAAEd,OAAO,CAACU,GAAD,CAAP,CAAaI,IADqB;AAExCC,QAAAA,OAAO,EAAEf,OAAO,CAACU,GAAD,CAAP,CAAaK;AAFkB,OAA5C,EAGGC,IAHH,CAGQ,YAAY;AAChBZ,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,OALD,EAKGY,KALH,CAKS,UAAUC,KAAV,EAAiB;AACtBd,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCa,KAAtC;AACH,OAPD;AAQH,KATD;AAUAX,IAAAA,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,OAApB,CAA4B,UAAUC,GAAV,EAAe;AACvCb,MAAAA,QAAQ,CAACc,QAAT,GAAoBC,GAApB,CAAwB,cAAcF,GAAtC,EAA2CG,GAA3C,CAA+C;AAC3CM,QAAAA,IAAI,EAAEjB,MAAM,CAACQ,GAAD,CAAN,CAAYS;AADyB,OAA/C,EAEGH,IAFH,CAEQ,YAAY;AAChBZ,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,OAJD,EAIGY,KAJH,CAIS,UAAUC,KAAV,EAAiB;AACtBd,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCa,KAAtC;AACH,OAND;AAOH,KARD;AASH,GApBD;AAqBH;KAzBepB,O;AA0BhB,OAAO,SAASsB,SAAT,CAAmBrB,MAAnB,EAA2B;AAC9B,SAAQO,QAAD,IAAc;AACjB,UAAMe,EAAE,GAAGxB,QAAQ,CAACc,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,CAAX,CADiB,CAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAS,IAAAA,EAAE,CAACC,EAAH,CAAM,OAAN,EAAe,UAAUC,QAAV,EAAoB;AAC/B,UAAIC,MAAM,GAAGD,QAAQ,CAACE,GAAT,GAAeV,OAA5B;AACAQ,MAAAA,QAAQ,CAACd,OAAT,CAAiBiB,IAAI,IAAI;AACrB,cAAMC,OAAO,GAAGD,IAAI,CAACD,GAAL,EAAhB;AACArB,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBsB,OAAtB;AACAN,QAAAA,EAAE,CAACO,KAAH,CAAS,UAAT,EAAqBA,KAArB,CAA2BD,OAAO,CAACZ,OAAnC,EAA4Cc,IAA5C,CAAiD,OAAjD,EAA0D,UAAUC,SAAV,EAAqB;AAC3E1B,UAAAA,OAAO,CAACC,GAAR,CAAYmB,MAAM,GAAG,GAAT,GAAeM,SAAS,CAACL,GAAV,EAA3B;AACH,SAFD;AAGH,OAND;AAOH,KATD;AAUH,GA1BD;AA2BH","sourcesContent":["import * as types from '../constants/actionTypes'\nimport firebase from '../constants/appconfig';\n\nexport function AddData(params) {\n    var userarr = params.users;\n    var Apparr = params.accounts;\n    console.log(\"params\", params)\n    return (dispatch) => {\n        Object.keys(userarr).forEach(function (key) {\n            firebase.database().ref('users/' + key).set({\n                name: userarr[key].name,\n                account: userarr[key].account,\n            }).then(function () {\n                console.log('Data added succesfully');\n            }).catch(function (error) {\n                console.log('Synchronization failed', error);\n            });\n        });\n        Object.keys(Apparr).forEach(function (key) {\n            firebase.database().ref('accounts/' + key).set({\n                apps: Apparr[key].apps\n            }).then(function () {\n                console.log('Data added succesfully');\n            }).catch(function (error) {\n                console.log('Synchronization failed', error);\n            });\n        });\n    }\n}\nexport function fetchData(params) {\n    return (dispatch) => {\n        const db = firebase.database().ref('users');\n        // db.on(\"value\", function (snapshot) {\n        //     let newUserState = [];\n        //     snapshot.forEach(data => {\n        //         const dataVal = data.val()\n        //         newUserState.push({\n        //             id: data.key,\n        //             name: dataVal.name,\n        //             account: dataVal.account\n        //         })\n        //     })\n        //     dispatch({ type: types.RESPONSE_FETCH_USER, data: newUserState });\n        // }, function (errorObject) {\n        //     console.log(\"The read failed: \" + errorObject.code);\n        // });\n        db.on('value', function (snapshot) {\n            var userId = snapshot.val().account;\n            snapshot.forEach(data => {\n                const dataVal = data.val()\n                console.log(\"dataVal\",dataVal);\n                db.child('accounts').child(dataVal.account).once('value', function (mediaSnap) {\n                    console.log(userId + \":\" + mediaSnap.val());\n                });\n            })\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}