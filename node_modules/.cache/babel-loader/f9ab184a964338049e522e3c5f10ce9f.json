{"ast":null,"code":"import * as types from '../constants/actionTypes';\nimport firebase from '../constants/appconfig';\nimport { notification } from 'antd';\nexport function AddData(params) {\n  var arr = params;\n  console.log(\"params\", params);\n  return dispatch => {\n    for (var k in arr) {\n      firebase.database().ref('users/' + arr[k].key).set({\n        name: arr[k].value.name,\n        account: arr[k].value.account\n      }).then(function () {\n        console.log('Data added succesfully');\n      }).catch(function (error) {\n        console.log('Synchronization failed', error);\n      });\n    }\n  };\n}\n_c = AddData;\nexport function fetchData(params) {\n  return dispatch => {\n    const db = firebase.database().ref('users');\n    db.on(\"value\", function (snapshot) {\n      let newUserState = [];\n      snapshot.forEach(data => {\n        const dataVal = data.val();\n        newUserState.push({\n          id: data.key,\n          name: dataVal.name,\n          account: dataVal.account\n        });\n      });\n      dispatch({\n        type: types.RESPONSE_FETCH_USER,\n        data: newUserState\n      });\n    }, function (errorObject) {\n      console.log(\"The read failed: \" + errorObject.code);\n    });\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["/Users/prashilparmar/Documents/REACT/beezerTest/testapp/src/Redux/actions/useraction.js"],"names":["types","firebase","notification","AddData","params","arr","console","log","dispatch","k","database","ref","key","set","name","value","account","then","catch","error","fetchData","db","on","snapshot","newUserState","forEach","data","dataVal","val","push","id","type","RESPONSE_FETCH_USER","errorObject","code"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAC5B,MAAIC,GAAG,GAAGD,MAAV;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;AACA,SAAQI,QAAD,IAAc;AACjB,SAAK,IAAIC,CAAT,IAAcJ,GAAd,EAAmB;AACfJ,MAAAA,QAAQ,CAACS,QAAT,GAAoBC,GAApB,CAAwB,WAAWN,GAAG,CAACI,CAAD,CAAH,CAAOG,GAA1C,EAA+CC,GAA/C,CAAmD;AAC/CC,QAAAA,IAAI,EAAET,GAAG,CAACI,CAAD,CAAH,CAAOM,KAAP,CAAaD,IAD4B;AAE/CE,QAAAA,OAAO,EAAEX,GAAG,CAACI,CAAD,CAAH,CAAOM,KAAP,CAAaC;AAFyB,OAAnD,EAGGC,IAHH,CAGQ,YAAY;AAChBX,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,OALD,EAKGW,KALH,CAKS,UAAUC,KAAV,EAAiB;AACtBb,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCY,KAAtC;AACH,OAPD;AAQH;AACJ,GAXD;AAYH;KAfehB,O;AAgBhB,OAAO,SAASiB,SAAT,CAAmBhB,MAAnB,EAA2B;AAC9B,SAAQI,QAAD,IAAc;AACjB,UAAMa,EAAE,GAAGpB,QAAQ,CAACS,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,CAAX;AACAU,IAAAA,EAAE,CAACC,EAAH,CAAM,OAAN,EAAe,UAAUC,QAAV,EAAoB;AAC/B,UAAIC,YAAY,GAAG,EAAnB;AACAD,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,IAAI,IAAI;AACrB,cAAMC,OAAO,GAAGD,IAAI,CAACE,GAAL,EAAhB;AACAJ,QAAAA,YAAY,CAACK,IAAb,CAAkB;AACdC,UAAAA,EAAE,EAAEJ,IAAI,CAACd,GADK;AAEdE,UAAAA,IAAI,EAAEa,OAAO,CAACb,IAFA;AAGdE,UAAAA,OAAO,EAAEW,OAAO,CAACX;AAHH,SAAlB;AAKH,OAPD;AAQAR,MAAAA,QAAQ,CAAC;AAAEuB,QAAAA,IAAI,EAAE/B,KAAK,CAACgC,mBAAd;AAAmCN,QAAAA,IAAI,EAAEF;AAAzC,OAAD,CAAR;AACH,KAXD,EAWG,UAAUS,WAAV,EAAuB;AACtB3B,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsB0B,WAAW,CAACC,IAA9C;AACH,KAbD;AAcH,GAhBD;AAiBH","sourcesContent":["import * as types from '../constants/actionTypes'\nimport firebase from '../constants/appconfig';\nimport { notification } from 'antd';\n\nexport function AddData(params) {\n    var arr = params;\n    console.log(\"params\", params)\n    return (dispatch) => {\n        for (var k in arr) {\n            firebase.database().ref('users/' + arr[k].key).set({\n                name: arr[k].value.name,\n                account: arr[k].value.account,\n            }).then(function () {\n                console.log('Data added succesfully');\n            }).catch(function (error) {\n                console.log('Synchronization failed', error);\n            });\n        }\n    }\n}\nexport function fetchData(params) {\n    return (dispatch) => {\n        const db = firebase.database().ref('users');\n        db.on(\"value\", function (snapshot) {\n            let newUserState = [];\n            snapshot.forEach(data => {\n                const dataVal = data.val()\n                newUserState.push({\n                    id: data.key,\n                    name: dataVal.name,\n                    account: dataVal.account\n                })\n            })\n            dispatch({ type: types.RESPONSE_FETCH_USER, data: newUserState });\n        }, function (errorObject) {\n            console.log(\"The read failed: \" + errorObject.code);\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}