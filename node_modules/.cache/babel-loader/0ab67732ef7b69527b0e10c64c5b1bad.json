{"ast":null,"code":"import * as types from '../constants/actionTypes';\nimport firebase from '../constants/appconfig';\nexport function AddData(params) {\n  var arr = params;\n  return dispatch => {\n    for (var k in arr) {\n      firebase.database().ref('users/' + arr[k].key).set({\n        name: arr[k].value.name,\n        account: arr[k].value.account\n      }).then(function () {\n        console.log('Data added succesfully');\n      }).catch(function (error) {\n        console.log('Synchronization failed', error);\n      });\n    }\n  };\n}\n_c = AddData;\nexport function fetchData(params) {\n  return dispatch => {\n    const db = firebase.database().ref('users');\n    db.on(\"value\", function (snapshot) {\n      // console.log(\"data\",snapshot.val());\n      dispatch({\n        type: types.RESPONSE_FETCH_USER,\n        data: snapshot.val()\n      });\n    }, function (errorObject) {\n      console.log(\"The read failed: \" + errorObject.code);\n    });\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"sources":["/Users/prashilparmar/Documents/REACT/beezerTest/testapp/src/Redux/actions/useraction.js"],"names":["types","firebase","AddData","params","arr","dispatch","k","database","ref","key","set","name","value","account","then","console","log","catch","error","fetchData","db","on","snapshot","type","RESPONSE_FETCH_USER","data","val","errorObject","code"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAC5B,MAAIC,GAAG,GAAGD,MAAV;AACA,SAAQE,QAAD,IAAc;AACjB,SAAK,IAAIC,CAAT,IAAcF,GAAd,EAAmB;AACfH,MAAAA,QAAQ,CAACM,QAAT,GAAoBC,GAApB,CAAwB,WAAWJ,GAAG,CAACE,CAAD,CAAH,CAAOG,GAA1C,EAA+CC,GAA/C,CAAmD;AAC/CC,QAAAA,IAAI,EAAEP,GAAG,CAACE,CAAD,CAAH,CAAOM,KAAP,CAAaD,IAD4B;AAE/CE,QAAAA,OAAO,EAAET,GAAG,CAACE,CAAD,CAAH,CAAOM,KAAP,CAAaC;AAFyB,OAAnD,EAGGC,IAHH,CAGQ,YAAY;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,OALD,EAKGC,KALH,CAKS,UAAUC,KAAV,EAAiB;AACtBH,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCE,KAAtC;AACH,OAPD;AAQH;AACJ,GAXD;AAYH;KAdehB,O;AAehB,OAAO,SAASiB,SAAT,CAAmBhB,MAAnB,EAA2B;AAC9B,SAAQE,QAAD,IAAc;AACb,UAAMe,EAAE,GAAGnB,QAAQ,CAACM,QAAT,GAAoBC,GAApB,CAAwB,OAAxB,CAAX;AACAY,IAAAA,EAAE,CAACC,EAAH,CAAM,OAAN,EAAe,UAASC,QAAT,EAAmB;AAC9B;AACAjB,MAAAA,QAAQ,CAAC;AAAEkB,QAAAA,IAAI,EAAEvB,KAAK,CAACwB,mBAAd;AAAmCC,QAAAA,IAAI,EAAEH,QAAQ,CAACI,GAAT;AAAzC,OAAD,CAAR;AACD,KAHH,EAGK,UAAUC,WAAV,EAAuB;AACxBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBW,WAAW,CAACC,IAA9C;AACD,KALH;AAMP,GARD;AASH","sourcesContent":["import * as types from '../constants/actionTypes'\nimport firebase from '../constants/appconfig';\n\nexport function AddData(params) {\n    var arr = params;\n    return (dispatch) => {\n        for (var k in arr) {\n            firebase.database().ref('users/' + arr[k].key).set({\n                name: arr[k].value.name,\n                account: arr[k].value.account,\n            }).then(function () {\n                console.log('Data added succesfully');\n            }).catch(function (error) {\n                console.log('Synchronization failed', error);\n            });\n        }\n    }\n}\nexport function fetchData(params) {\n    return (dispatch) => {\n            const db = firebase.database().ref('users');\n            db.on(\"value\", function(snapshot) {\n                // console.log(\"data\",snapshot.val());\n                dispatch({ type: types.RESPONSE_FETCH_USER, data: snapshot.val() });\n              }, function (errorObject) {\n                console.log(\"The read failed: \" + errorObject.code);\n              });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}