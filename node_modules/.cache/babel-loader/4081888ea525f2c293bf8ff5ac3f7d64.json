{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/prashilparmar/Documents/REACT/beezerTest/testapp/src/Screens/UserList.jsx\";\nimport { Component } from 'react';\nimport data from './../data.json';\nimport { Table, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { AddData, fetchData } from './../Redux/actions/useraction';\nimport { bindActionCreators } from 'redux';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newData: []\n    };\n  }\n\n  addData() {\n    var arr = [];\n\n    for (var i in Object.keys(data.users)) {\n      for (var j in Object.values(data.users)) {}\n\n      var key = Object.keys(data.users)[i];\n      var values = Object.values(data.users)[j];\n      arr.push({\n        key: key,\n        value: values\n      });\n    }\n\n    this.setState({\n      newData: arr\n    });\n  }\n\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  render() {\n    console.log(\"this.props\", this.props);\n    let userData = [];\n    const userList = this.props && this.props.userList.length > 0 && this.props.userList;\n    console.log(\"userData\", userList);\n    let ele = null;\n    this.props.userList.map((data, index) => {\n      const {\n        account,\n        name\n      } = data;\n      console.log(\"account\", account);\n      console.log(\"account\", data); // // <tr key={index}>\n      // //     <td>\n      // //         {index}\n      // //     </td>\n      // //     <td>\n      // //         {name}\n      // //     </td>\n      // //     <td>\n      // //         {account}\n      // //     </td>\n      // // </tr>\n      // return userData.push(ele);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Data fetched from Firebase Real Time Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Add Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    userList: state.user.userList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    AddData,\n    fetchData\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);","map":{"version":3,"sources":["/Users/prashilparmar/Documents/REACT/beezerTest/testapp/src/Screens/UserList.jsx"],"names":["Component","data","Table","Button","connect","AddData","fetchData","bindActionCreators","UserList","constructor","props","state","newData","addData","arr","i","Object","keys","users","j","values","key","push","value","setState","componentDidMount","render","console","log","userData","userList","length","ele","map","index","account","name","mapStateToProps","user","mapDispatchToProps","dispatch"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,+BAAnC;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AACA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAC7BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAEDC,EAAAA,OAAO,GAAG;AACN,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAT,IAAcC,MAAM,CAACC,IAAP,CAAYhB,IAAI,CAACiB,KAAjB,CAAd,EAAuC;AACnC,WAAK,IAAIC,CAAT,IAAcH,MAAM,CAACI,MAAP,CAAcnB,IAAI,CAACiB,KAAnB,CAAd,EAAyC,CACxC;;AACD,UAAIG,GAAG,GAAGL,MAAM,CAACC,IAAP,CAAYhB,IAAI,CAACiB,KAAjB,EAAwBH,CAAxB,CAAV;AACA,UAAIK,MAAM,GAAGJ,MAAM,CAACI,MAAP,CAAcnB,IAAI,CAACiB,KAAnB,EAA0BC,CAA1B,CAAb;AACAL,MAAAA,GAAG,CAACQ,IAAJ,CAAS;AACLD,QAAAA,GAAG,EAAEA,GADA;AAELE,QAAAA,KAAK,EAAEH;AAFF,OAAT;AAIH;;AACD,SAAKI,QAAL,CAAc;AAAEZ,MAAAA,OAAO,EAAEE;AAAX,KAAd;AACH;;AACDW,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,KAAL,CAAWJ,SAAX;AACH;;AACDoB,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKlB,KAA/B;AACA,QAAImB,QAAQ,GAAG,EAAf;AACA,UAAMC,QAAQ,GAAG,KAAKpB,KAAL,IAAc,KAAKA,KAAL,CAAWoB,QAAX,CAAoBC,MAApB,GAA6B,CAA3C,IAAgD,KAAKrB,KAAL,CAAWoB,QAA5E;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBE,QAAvB;AAEI,QAAIE,GAAG,GAAG,IAAV;AACA,SAAKtB,KAAL,CAAWoB,QAAX,CAAoBG,GAApB,CAAwB,CAAChC,IAAD,EAAOiC,KAAP,KAAiB;AACrC,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAoBnC,IAA1B;AACA0B,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBO,OAAtB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsB3B,IAAtB,EAHqC,CAIrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAhBD;AAkBJ,wBACI;AAAA,8BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAwB,QAAA,KAAK,MAA7B;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAA,oBACK4B;AADL;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH;;AAxE4B;;AA0EjC,SAASQ,eAAT,CAAyB1B,KAAzB,EAAgC;AAC5B,SAAO;AACH2B,IAAAA,IAAI,EAAE3B,KAAK,CAAC2B,IADT;AAEHR,IAAAA,QAAQ,EAAEnB,KAAK,CAAC2B,IAAN,CAAWR;AAFlB,GAAP;AAIH;;AACD,SAASS,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAOjC,kBAAkB,CACrB;AACIF,IAAAA,OADJ;AAEIC,IAAAA;AAFJ,GADqB,EAKrBkC,QALqB,CAAzB;AAOH;;AACD,eAAepC,OAAO,CAACiC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C/B,QAA7C,CAAf","sourcesContent":["import { Component } from 'react';\nimport data from './../data.json';\nimport { Table, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux';\nimport { AddData, fetchData } from './../Redux/actions/useraction'\nimport { bindActionCreators } from 'redux'\nclass UserList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newData: []\n        }\n    }\n\n    addData() {\n        var arr = [];\n        for (var i in Object.keys(data.users)) {\n            for (var j in Object.values(data.users)) {\n            }\n            var key = Object.keys(data.users)[i]\n            var values = Object.values(data.users)[j]\n            arr.push({\n                key: key,\n                value: values\n            })\n        }\n        this.setState({ newData: arr })\n    }\n    componentDidMount() {\n        this.props.fetchData();\n    }\n    render() {\n        console.log(\"this.props\", this.props)\n        let userData = []\n        const userList = this.props && this.props.userList.length > 0 && this.props.userList\n        console.log(\"userData\",userList)\n        \n            let ele = null;\n            this.props.userList.map((data, index) => {\n                const { account, name } = data;\n                console.log(\"account\",account)\n                console.log(\"account\",data)\n                // // <tr key={index}>\n                // //     <td>\n                // //         {index}\n                // //     </td>\n                // //     <td>\n                // //         {name}\n                // //     </td>\n                // //     <td>\n                // //         {account}\n                // //     </td>\n                // // </tr>\n                // return userData.push(ele);\n            })\n        \n        return (\n            <div>\n                <div>\n                    <h1>Data fetched from Firebase Real Time Database</h1>\n                    <Button>\n                        Add Data\n                    </Button>\n                </div>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>User ID</th>\n                            <th>Name</th>\n                            <th>Account</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {userData}\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        user: state.user,\n        userList: state.user.userList,\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(\n        {\n            AddData,\n            fetchData\n        },\n        dispatch\n    )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList)"]},"metadata":{},"sourceType":"module"}