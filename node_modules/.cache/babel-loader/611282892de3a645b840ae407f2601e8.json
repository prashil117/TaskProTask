{"ast":null,"code":"import * as types from '../constants/actionTypes';\nconst initialSettings = {\n  userList: [],\n  AccountList: [],\n  msg: ''\n};\n\nconst settings = (state = initialSettings, action) => {\n  switch (action.type) {\n    case types.RESPONSE_FETCH_USER:\n      const data = action.data ? action.data : null;\n      const mssg = action.data && action.data.length > 0 ? 'Data found' : 'No Data';\n      return {\n        userList: data,\n        msg: mssg\n      };\n\n    case types.RESPONSE_FETCH_ACCOUNTS:\n      console.log(action);\n      const dataAccounts = action.data ? action.data : null;\n      const msg = action.data && action.data.length > 0 ? 'Data found' : 'No Data';\n      return { ...state,\n        AccountList: dataAccounts,\n        msg: msg\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default settings;","map":{"version":3,"sources":["/Users/prashilparmar/Documents/REACT/beezerTest/testapp/src/Redux/reducers/userReducer.js"],"names":["types","initialSettings","userList","AccountList","msg","settings","state","action","type","RESPONSE_FETCH_USER","data","mssg","length","RESPONSE_FETCH_ACCOUNTS","console","log","dataAccounts"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,WAAW,EAAC,EAFQ;AAGpBC,EAAAA,GAAG,EAAE;AAHe,CAAxB;;AAOA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAGL,eAAT,EAA0BM,MAA1B,KAAqC;AAElD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,KAAK,CAACS,mBAAX;AACI,YAAMC,IAAI,GAAGH,MAAM,CAACG,IAAP,GAAcH,MAAM,CAACG,IAArB,GAA4B,IAAzC;AACA,YAAMC,IAAI,GAAGJ,MAAM,CAACG,IAAP,IAAeH,MAAM,CAACG,IAAP,CAAYE,MAAZ,GAAqB,CAApC,GAAwC,YAAxC,GAAuD,SAApE;AACA,aAAO;AACHV,QAAAA,QAAQ,EAAEQ,IADP;AAEHN,QAAAA,GAAG,EAAEO;AAFF,OAAP;;AAIA,SAAKX,KAAK,CAACa,uBAAX;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACJ,YAAMS,YAAY,GAAGT,MAAM,CAACG,IAAP,GAAcH,MAAM,CAACG,IAArB,GAA4B,IAAjD;AACA,YAAMN,GAAG,GAAGG,MAAM,CAACG,IAAP,IAAeH,MAAM,CAACG,IAAP,CAAYE,MAAZ,GAAqB,CAApC,GAAwC,YAAxC,GAAuD,SAAnE;AACA,aAAO,EACH,GAAGN,KADA;AAEHH,QAAAA,WAAW,EAACa,YAFT;AAGHZ,QAAAA,GAAG,EAAEA;AAHF,OAAP;;AAKJ;AACI,aAAO,EACH,GAAGE;AADA,OAAP;AAlBR;AAuBH,CAzBD;;AA2BA,eAAeD,QAAf","sourcesContent":["import * as types from '../constants/actionTypes'\n\nconst initialSettings = {\n    userList: [],\n    AccountList:[],\n    msg: ''\n};\n\n\nconst settings = (state = initialSettings, action) => {\n    \n    switch (action.type) {\n        case types.RESPONSE_FETCH_USER:\n            const data = action.data ? action.data : null;\n            const mssg = action.data && action.data.length > 0 ? 'Data found' : 'No Data'\n            return {\n                userList: data,\n                msg: mssg\n            }\n            case types.RESPONSE_FETCH_ACCOUNTS:\n                console.log(action)\n            const dataAccounts = action.data ? action.data : null;\n            const msg = action.data && action.data.length > 0 ? 'Data found' : 'No Data'\n            return {\n                ...state,\n                AccountList:dataAccounts,\n                msg: msg\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n\n}\n\nexport default settings\n"]},"metadata":{},"sourceType":"module"}