{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/prashilparmar/Documents/REACT/beezerTest/testapp/src/Screens/UserList.jsx\";\nimport { Component } from 'react';\nimport data from './../data.json';\nimport { Table, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Spin } from 'antd';\nimport { AddData, fetchData } from './../Redux/actions/useraction';\nimport { bindActionCreators } from 'redux';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newData: [],\n      dataload: this.props.msg === \"\" ? 'fetching' : 'fetched'\n    };\n  }\n\n  addData() {\n    const data1 = data.users;\n    this.props.AddData(data1);\n  }\n\n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  render() {\n    console.log(\"this.props\", this.props);\n    let userData = [];\n    let ele = null;\n    this.props.userList.map(data => {\n      const {\n        id,\n        account,\n        name\n      } = data;\n      ele = /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this);\n      return userData.push(ele);\n    });\n    console.log(\"userData\", userData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Data \", this.props.msg === \"\" ? 'fetching' : 'fetched', \" from Firebase Real Time Database\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), userData && userData.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"User ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: userData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: this.props.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 36\n        }, this), \"  \", this.props.msg === \"\" ? /*#__PURE__*/_jsxDEV(Spin, {\n          tip: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 88\n        }, this) : this.props.msg === \"No Data\" && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            this.addData();\n          },\n          children: \"Add Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 153\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    userList: state.user.userList,\n    msg: state.user.msg\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    AddData,\n    fetchData\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);","map":{"version":3,"sources":["/Users/prashilparmar/Documents/REACT/beezerTest/testapp/src/Screens/UserList.jsx"],"names":["Component","data","Table","Button","connect","Spin","AddData","fetchData","bindActionCreators","UserList","constructor","props","state","newData","dataload","msg","addData","data1","users","componentDidMount","render","console","log","userData","ele","userList","map","id","account","name","push","length","mapStateToProps","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport data from './../data.json';\nimport { Table, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux';\nimport { Spin } from 'antd';\nimport { AddData, fetchData } from './../Redux/actions/useraction'\nimport { bindActionCreators } from 'redux'\n\nclass UserList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            newData: [],\n            dataload: this.props.msg === \"\" ? 'fetching' : 'fetched'\n        }\n    }\n\n    addData() {\n        const data1 = data.users;\n        this.props.AddData(data1)\n    }\n    componentDidMount() {\n        this.props.fetchData();\n    }\n    render() {\n        console.log(\"this.props\", this.props)\n        let userData = []\n        let ele = null;\n        this.props.userList.map((data) => {\n            const { id, account, name } = data;\n            ele = (<tr key={id}>\n                <td>\n                    {id}\n                </td>\n                <td>\n                    {name}\n                </td>\n                <td>\n                    {account}\n                </td>\n            </tr>)\n            return userData.push(ele);\n        })\n        console.log(\"userData\", userData)\n        return (\n            <div>\n                <div>\n                    <h1>Data {this.props.msg === \"\" ? 'fetching' : 'fetched'} from Firebase Real Time Database</h1>\n                </div>\n                {userData && userData.length !== 0 ?\n                    <div>\n                        <Table striped bordered hover>\n\n                            <thead>\n\n                                <tr>\n                                    <th>User ID</th>\n                                    <th>Name</th>\n                                    <th>Account</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {userData}\n                            </tbody>\n                        </Table>\n                    </div> : <div> <h4>{this.props.msg}</h4>  {this.props.msg === \"\" ? <Spin tip=\"Loading...\"></Spin> : this.props.msg === \"No Data\" && <Button onClick={() => { this.addData() }}>\n                        Add Data\n                    </Button>}\n                    </div>}\n\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        user: state.user,\n        userList: state.user.userList,\n        msg: state.user.msg\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(\n        {\n            AddData,\n            fetchData\n        },\n        dispatch\n    )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList)"]},"metadata":{},"sourceType":"module"}